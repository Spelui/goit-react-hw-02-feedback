{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/StatisticsItem/StatisticsItem.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/App/App.jsx","index.js"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","type","onClick","StatisticsItem","itemText","value","Notification","Statistics","good","neutral","bad","total","positivePercentage","Math","round","App","state","addFeedback","nameState","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAgBeA,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCiBQC,EArBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OACxB,wBAEEC,KAAK,SACLC,QAAS,kBAAMN,EAAgBI,IAHjC,SAKGA,GAJIA,SCUAG,EAfQ,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAClC,OACE,6BACE,8BACGD,EADH,KACc,+BAAOC,UCFZC,EAJM,WACnB,OAAO,sDCqCMC,EAlCI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,4CACED,EAGA,+BACE,cAAC,EAAD,CAAgBP,SAAS,OAAOC,MAAOG,IACvC,cAAC,EAAD,CAAgBJ,SAAS,UAAUC,MAAOI,IAC1C,cAAC,EAAD,CAAgBL,SAAS,MAAMC,MAAOK,IACtC,cAAC,EAAD,CAAgBN,SAAS,QAAQC,MAAOM,IACxC,cAAC,EAAD,CACEP,SAAS,mBACTC,MACEO,EACIC,KAAKC,MAAMF,GAAsB,IACjC,UAZV,cAAC,EAAD,QCJFG,E,4MACJC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,YAAc,SAACC,GACb,OAAO,EAAKC,UAAS,SAACC,GAAD,sBAClBF,EAAYE,EAAUF,GAAa,O,EAIxCG,mBAAqB,WACnB,MAA+B,EAAKL,MACpC,OADA,EAAQR,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBY,gCAAkC,WAChC,qBAAQN,EAAR,EAAQA,MAAOK,EAAf,EAAeA,mBACf,OAAqB,IAAbL,EAAMR,KAAca,K,4CAG9B,WACE,IACEL,EAIEO,KAJFP,MACAC,EAGEM,KAHFN,YACAI,EAEEE,KAFFF,mBACAC,EACEC,KADFD,gCAEF,EAA+BC,KAAKP,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQU,IACRT,EAAqBU,IAE3B,OACE,eAAC,EAAD,CAAS9B,MAAM,wBAAf,UACE,cAAC,EAAD,CAAiBG,QAASqB,EAAOpB,gBAAiBqB,IAClD,cAAC,EAAD,CACET,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,W,GA1CZY,aAiDHT,ICjDfU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.350c8860.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {Object.keys(options).map((option) => (\r\n        <button\r\n          key={option}\r\n          type=\"button\"\r\n          onClick={() => onLeaveFeedback(option)}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst StatisticsItem = ({ itemText, value }) => {\r\n  return (\r\n    <li>\r\n      <p>\r\n        {itemText}: <span>{value}</span>\r\n      </p>\r\n    </li>\r\n  );\r\n};\r\n\r\nStatisticsItem.propTypes = {\r\n  itemText: PropTypes.string,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nexport default StatisticsItem;\r\n","const Notification = () => {\r\n  return <p>There is no feedback</p>;\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from \"prop-types\";\r\nimport StatisticsItem from \"./StatisticsItem/StatisticsItem\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <h2>Statistics</h2>\r\n      {!total ? (\r\n        <Notification />\r\n      ) : (\r\n        <ul>\r\n          <StatisticsItem itemText=\"Good\" value={good} />\r\n          <StatisticsItem itemText=\"Neutral\" value={neutral} />\r\n          <StatisticsItem itemText=\"Bad\" value={bad} />\r\n          <StatisticsItem itemText=\"Total\" value={total} />\r\n          <StatisticsItem\r\n            itemText=\"Positiv feedback\"\r\n            value={\r\n              positivePercentage\r\n                ? Math.round(positivePercentage) + \"%\"\r\n                : 0 + \"%\"\r\n            }\r\n          />\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import { Component } from \"react\";\r\nimport Section from \"../Section/Section\";\r\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  addFeedback = (nameState) => {\r\n    return this.setState((prevState) => ({\r\n      [nameState]: prevState[nameState] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { state, countTotalFeedback } = this;\r\n    return (state.good * 100) / countTotalFeedback();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      state,\r\n      addFeedback,\r\n      countTotalFeedback,\r\n      countPositiveFeedbackPercentage,\r\n    } = this;\r\n    const { good, neutral, bad } = this.state;\r\n    const total = countTotalFeedback();\r\n    const positivePercentage = countPositiveFeedbackPercentage();\r\n\r\n    return (\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions options={state} onLeaveFeedback={addFeedback} />\r\n        <Statistics\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          total={total}\r\n          positivePercentage={positivePercentage}\r\n        ></Statistics>\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}